{"remainingRequest":"/Users/sundev/Desktop/app/node_modules/babel-loader/lib/index.js!/Users/sundev/Desktop/app/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/sundev/Desktop/app/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/sundev/Desktop/app/src/views/Task.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/sundev/Desktop/app/src/views/Task.vue","mtime":1632798905979},{"path":"/Users/sundev/Desktop/app/node_modules/cache-loader/dist/cjs.js","mtime":1632482182334},{"path":"/Users/sundev/Desktop/app/node_modules/babel-loader/lib/index.js","mtime":1632482183088},{"path":"/Users/sundev/Desktop/app/node_modules/cache-loader/dist/cjs.js","mtime":1632482182334},{"path":"/Users/sundev/Desktop/app/node_modules/vue-loader/lib/index.js","mtime":1632482183301}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLmRlc2NyaXB0aW9uLmpzIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICd0YXNrcycsCiAgY29tcHV0ZWQ6IHsKICAgIHRhc2s6IGZ1bmN0aW9uIHRhc2soKSB7CiAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5nZXR0ZXJzLnRhc2tCeUlkKCt0aGlzLiRyb3V0ZS5wYXJhbXMuaWQpOwogICAgfQogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGRlc2NyaXB0aW9uOiAnJywKICAgICAgY2hpcHM6IG51bGwsCiAgICAgIGRhdGU6IG51bGwKICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICBzdWJtaXRIYW5kbGVyOiBmdW5jdGlvbiBzdWJtaXRIYW5kbGVyKCkgewogICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCgndXBkYXRlVGFzaycsIHsKICAgICAgICBpZDogdGhpcy50YXNrLmlkLAogICAgICAgIGRlc2NyaXB0aW9uOiB0aGlzLmRlc2NyaXB0aW9uLAogICAgICAgIGRkYXRlOiB0aGlzLmRhdGUuZGF0ZQogICAgICB9KTsKICAgICAgdGhpcy4kcm91dGVyLnB1c2goJy9saXN0Jyk7CiAgICB9LAogICAgQ29tcGxldGVUYXNrOiBmdW5jdGlvbiBDb21wbGV0ZVRhc2soKSB7CiAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKCdjb21wbGV0ZVRhc2snLCB0aGlzLnRhc2suaWQpOwogICAgICB0aGlzLiRyb3V0ZXIucHVzaCgnL2xpc3QnKTsKICAgIH0KICB9LAogIGRlc3Ryb3llZDogZnVuY3Rpb24gZGVzdHJveWVkKCkgewogICAgaWYgKHRoaXMuY2hpcHMgJiYgdGhpcy5jaGlwcy5kZXN0cm95ZWQpIHsKICAgICAgdGhpcy5jaGlwcy5kZXN0cm95ZWQoKTsKICAgIH0KCiAgICBpZiAodGhpcy5kYXRlICYmIHRoaXMuZGF0ZS5kZXN0cm95ZWQpIHsKICAgICAgdGhpcy5kYXRlLmRlc3Ryb3llZCgpOwogICAgfQogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHRoaXMuZGVzY3JpcHRpb24gPSB0aGlzLnRhc2suZGVzY3JpcHRpb247CiAgICB0aGlzLmNoaXBzID0gTS5DaGlwcy5pbml0KHRoaXMuJHJlZnMuY2hpcHMsIHsKICAgICAgcGxhY2Vob2xkZXI6ICdUYXNrIHRhZ3MnLAogICAgICBkYXRhOiB0aGlzLnRhc2sudGFncwogICAgfSk7CiAgICB0aGlzLmRhdGUgPSBNLkRhdGVwaWNrZXIuaW5pdCh0aGlzLiRyZWZzLmRhdGVwaWNrZXIsIHsKICAgICAgZm9ybWF0OiAnZGQubW0ueXl5eScsCiAgICAgIGRlZmF1bHREYXRlOiBuZXcgRGF0ZSh0aGlzLnRhc2suZGF0ZSksCiAgICAgIHNldERlZmF1bHREYXRlOiB0cnVlCiAgICB9KTsKICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkgewogICAgICBNLnVwZGF0ZVRleHRGaWVsZHMoKTsKICAgIH0sIDApOwogIH0KfTs="},{"version":3,"sources":["Task.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiCA,eAAA;AACA,EAAA,IAAA,EAAA,OADA;AAEA,EAAA,QAAA,EAAA;AACA,IAAA,IADA,kBACA;AACA,aAAA,KAAA,MAAA,CAAA,OAAA,CAAA,QAAA,CAAA,CAAA,KAAA,MAAA,CAAA,MAAA,CAAA,EAAA,CAAA;AACA;AAHA,GAFA;AAOA,EAAA,IAAA,EAAA;AAAA,WAAA;AACA,MAAA,WAAA,EAAA,EADA;AAEA,MAAA,KAAA,EAAA,IAFA;AAGA,MAAA,IAAA,EAAA;AAHA,KAAA;AAAA,GAPA;AAYA,EAAA,OAAA,EAAA;AACA,IAAA,aADA,2BACA;AACA,WAAA,MAAA,CAAA,QAAA,CAAA,YAAA,EAAA;AACA,QAAA,EAAA,EAAA,KAAA,IAAA,CAAA,EADA;AAEA,QAAA,WAAA,EAAA,KAAA,WAFA;AAGA,QAAA,KAAA,EAAA,KAAA,IAAA,CAAA;AAHA,OAAA;AAKA,WAAA,OAAA,CAAA,IAAA,CAAA,OAAA;AACA,KARA;AASA,IAAA,YATA,0BASA;AACA,WAAA,MAAA,CAAA,QAAA,CAAA,cAAA,EAAA,KAAA,IAAA,CAAA,EAAA;AACA,WAAA,OAAA,CAAA,IAAA,CAAA,OAAA;AACA;AAZA,GAZA;AA2BA,EAAA,SA3BA,uBA2BA;AACA,QAAA,KAAA,KAAA,IAAA,KAAA,KAAA,CAAA,SAAA,EAAA;AACA,WAAA,KAAA,CAAA,SAAA;AACA;;AAEA,QAAA,KAAA,IAAA,IAAA,KAAA,IAAA,CAAA,SAAA,EAAA;AACA,WAAA,IAAA,CAAA,SAAA;AACA;AACA,GAnCA;AAoCA,EAAA,OApCA,qBAoCA;AACA,SAAA,WAAA,GAAA,KAAA,IAAA,CAAA,WAAA;AACA,SAAA,KAAA,GAAA,CAAA,CAAA,KAAA,CAAA,IAAA,CAAA,KAAA,KAAA,CAAA,KAAA,EAAA;AACA,MAAA,WAAA,EAAA,WADA;AAEA,MAAA,IAAA,EAAA,KAAA,IAAA,CAAA;AAFA,KAAA,CAAA;AAKA,SAAA,IAAA,GAAA,CAAA,CAAA,UAAA,CAAA,IAAA,CAAA,KAAA,KAAA,CAAA,UAAA,EAAA;AACA,MAAA,MAAA,EAAA,YADA;AAEA,MAAA,WAAA,EAAA,IAAA,IAAA,CAAA,KAAA,IAAA,CAAA,IAAA,CAFA;AAGA,MAAA,cAAA,EAAA;AAHA,KAAA,CAAA;AAKA,IAAA,UAAA,CAAA,YAAA;AACA,MAAA,CAAA,CAAA,gBAAA;AACA,KAFA,EAEA,CAFA,CAAA;AAGA;AAnDA,CAAA","sourcesContent":["<template>\n<div class=\"row\">\n  <div class=\"col s6 offset-s3\">\n    <div v-if=\"task\" >\n      <h1>{{task.title}}</h1>\n    </div>\n    <div v-else>Task Not Found!</div>\n\n    <div>\n        <form @submit.prevent=\"submitHandler\">\n\n          <div class=\"chips\" ref=\"chips\"></div>\n\n          <div class=\"input-field\">\n            <textarea v-model=\"description\" id=\"description\" class=\"materialize-textarea\"></textarea>\n            <label for=\"description\">Textarea</label>\n            <span class=\"character-counter\" style=\"float: right; font-size: 12px;\">{{description.length}}/2048</span>\n          </div>\n\n          <input type=\"text\" ref=\"datepicker\">\n          \n          <div v-if=\"task.status !== 'completed'\">\n            <button class=\"btn\" type=\"submit\" style=\"margin-right:20px\">Update</button>\n            <button class=\"btn blue\" type=\"button\" @click=\"CompleteTask\"> Complete task</button>\n          </div>\n         \n        </form>\n    </div>\n  </div>\n</div>\n</template>\n\n<script>\nexport default {\n  name:'tasks',\n  computed:{\n    task(){\n      return this.$store.getters.taskById(+this.$route.params.id)\n    }\n  },\n  data:() => ({\n      description:'',\n      chips:null,\n      date:null\n    }),\n    methods:{\n      submitHandler(){\n        this.$store.dispatch('updateTask', {\n          id:this.task.id,\n          description:this.description,\n          ddate:this.date.date\n        })\n        this.$router.push('/list')\n      },\n      CompleteTask(){\n        this.$store.dispatch('completeTask', this.task.id)\n        this.$router.push('/list')\n      }\n      \n    },\n    destroyed(){\n      if(this.chips && this.chips.destroyed) {\n        this.chips.destroyed()\n      }\n      \n      if(this.date && this.date.destroyed){\n        this.date.destroyed()\n      }\n    },\n    mounted(){\n      this.description = this.task.description\n      this.chips = M.Chips.init(this.$refs.chips, {\n        placeholder:'Task tags',\n        data:this.task.tags\n      })\n  \n      this.date = M.Datepicker.init(this.$refs.datepicker, {\n        format:'dd.mm.yyyy',\n        defaultDate:new Date(this.task.date),\n        setDefaultDate:true\n      })\n      setTimeout(() => {\n        M.updateTextFields()\n      },0)\n    }\n};\n</script>\n\n<style>\n    \n</style>"],"sourceRoot":"src/views"}]}