{"remainingRequest":"/Users/sundev/Desktop/app/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/sundev/Desktop/app/src/views/Create.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/sundev/Desktop/app/src/views/Create.vue","mtime":1632797031940},{"path":"/Users/sundev/Desktop/app/node_modules/cache-loader/dist/cjs.js","mtime":1632482182334},{"path":"/Users/sundev/Desktop/app/node_modules/babel-loader/lib/index.js","mtime":1632482183088},{"path":"/Users/sundev/Desktop/app/node_modules/cache-loader/dist/cjs.js","mtime":1632482182334},{"path":"/Users/sundev/Desktop/app/node_modules/vue-loader/lib/index.js","mtime":1632482183301}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCgpleHBvcnQgZGVmYXVsdCB7CiAgICBuYW1lOidjcmVhdGUnLAogICAgY29tcG9uZW50czp7CgogICAgfSwKICAgIGRhdGE6KCkgPT4gKHsKICAgICAgZGVzY3JpcHRpb246JycsCiAgICAgIHRpdGxlOicnLAogICAgICBjaGlwczpudWxsLAogICAgICBkYXRlOm51bGwKICAgIH0pLAogICAgbWV0aG9kczp7CiAgICAgIHN1Ym1pdEhhbmRsZXIoKXsKICAgICAgICBjb25zdCB0YXNrID0gewogICAgICAgICAgdGl0bGU6dGhpcy50aXRsZSwKICAgICAgICAgIGRlc2NyaXB0aW9uOnRoaXMuZGVzY3JpcHRpb24sCiAgICAgICAgICBpZDpEYXRlLm5vdygpLAogICAgICAgICAgc3RhdHVzOiJhY3RpdmUiLAogICAgICAgICAgdGFnczp0aGlzLmNoaXBzLmNoaXBzRGF0YSwKICAgICAgICAgIGRhdGU6dGhpcy5kYXRlLmRhdGUKICAgICAgICB9CiAgICAgICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ2NyZWF0ZVRhc2snLCB0YXNrKQogICAgICAgIHRoaXMuJHJvdXRlci5wdXNoKCcvbGlzdCcpCiAgICAgIH0KICAgICAgCiAgICB9LAogICAgZGVzdHJveWVkKCl7CiAgICAgIGlmKHRoaXMuY2hpcHMgJiYgdGhpcy5jaGlwcy5kZXN0cm95ZWQpIHsKICAgICAgICB0aGlzLmNoaXBzLmRlc3Ryb3llZCgpCiAgICAgIH0KICAgICAgCiAgICAgIGlmKHRoaXMuZGF0ZSAmJiB0aGlzLmRhdGUuZGVzdHJveWVkKXsKICAgICAgICB0aGlzLmRhdGUuZGVzdHJveWVkKCkKICAgICAgfQogICAgfSwKICAgIG1vdW50ZWQoKXsKICAgICAgdGhpcy5jaGlwcyA9IE0uQ2hpcHMuaW5pdCh0aGlzLiRyZWZzLmNoaXBzLCB7CiAgICAgICAgcGxhY2Vob2xkZXI6J1Rhc2sgdGFncycKICAgICAgfSkKCiAgICAgdGhpcy5kYXRlID0gTS5EYXRlcGlja2VyLmluaXQodGhpcy4kcmVmcy5kYXRlcGlja2VyLCB7CiAgICAgICAgZm9ybWF0OidkZC5tbS55eXl5JywKICAgICAgICBkZWZhdWx0RGF0ZTpuZXcgRGF0ZSgpLAogICAgICAgIHNldERlZmF1bHREYXRlOnRydWUKICAgICAgfSkKICAgICAgCiAgICB9Cn0K"},{"version":3,"sources":["Create.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA","file":"Create.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div id=\"home\" class=\"row\">\n      <div class=\"col s6 offset-s3\">\n        <h1>Create Task</h1>\n        <form @submit.prevent=\"submitHandler\">\n\n          <div class=\"input-field \">\n            <input  id=\"title\" v-model=\"title\" type=\"text\" class=\"validate\" required>\n            <label for=\"title\">Title</label>\n            <span class=\"helper-text\" data-error=\"Title is not required\"></span>\n          </div>\n          \n          <div class=\"chips\" ref=\"chips\"></div>\n\n          <div class=\"input-field\">\n            <textarea v-model=\"description\" id=\"description\" class=\"materialize-textarea\"></textarea>\n            <label for=\"description\">Description</label>\n            <span class=\"character-counter\" style=\"float: right; font-size: 12px;\">{{description.length}}/2048</span>\n          </div>\n\n          <input type=\"text\" ref=\"datepicker\">\n\n          <button class=\"btn\" type=\"submit\">Create Task</button>\n        </form>\n       \n\n      </div>\n  </div>\n</template>\n\n<script>\n\nexport default {\n    name:'create',\n    components:{\n\n    },\n    data:() => ({\n      description:'',\n      title:'',\n      chips:null,\n      date:null\n    }),\n    methods:{\n      submitHandler(){\n        const task = {\n          title:this.title,\n          description:this.description,\n          id:Date.now(),\n          status:\"active\",\n          tags:this.chips.chipsData,\n          date:this.date.date\n        }\n        this.$store.dispatch('createTask', task)\n        this.$router.push('/list')\n      }\n      \n    },\n    destroyed(){\n      if(this.chips && this.chips.destroyed) {\n        this.chips.destroyed()\n      }\n      \n      if(this.date && this.date.destroyed){\n        this.date.destroyed()\n      }\n    },\n    mounted(){\n      this.chips = M.Chips.init(this.$refs.chips, {\n        placeholder:'Task tags'\n      })\n\n     this.date = M.Datepicker.init(this.$refs.datepicker, {\n        format:'dd.mm.yyyy',\n        defaultDate:new Date(),\n        setDefaultDate:true\n      })\n      \n    }\n}\n</script>\n\n<style>\n\n</style>"]}]}