{"remainingRequest":"/Users/sundev/Desktop/app/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/sundev/Desktop/app/src/views/Task.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/sundev/Desktop/app/src/views/Task.vue","mtime":1632798905979},{"path":"/Users/sundev/Desktop/app/node_modules/cache-loader/dist/cjs.js","mtime":1632482182334},{"path":"/Users/sundev/Desktop/app/node_modules/babel-loader/lib/index.js","mtime":1632482183088},{"path":"/Users/sundev/Desktop/app/node_modules/cache-loader/dist/cjs.js","mtime":1632482182334},{"path":"/Users/sundev/Desktop/app/node_modules/vue-loader/lib/index.js","mtime":1632482183301}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOid0YXNrcycsCiAgY29tcHV0ZWQ6ewogICAgdGFzaygpewogICAgICByZXR1cm4gdGhpcy4kc3RvcmUuZ2V0dGVycy50YXNrQnlJZCgrdGhpcy4kcm91dGUucGFyYW1zLmlkKQogICAgfQogIH0sCiAgZGF0YTooKSA9PiAoewogICAgICBkZXNjcmlwdGlvbjonJywKICAgICAgY2hpcHM6bnVsbCwKICAgICAgZGF0ZTpudWxsCiAgICB9KSwKICAgIG1ldGhvZHM6ewogICAgICBzdWJtaXRIYW5kbGVyKCl7CiAgICAgICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ3VwZGF0ZVRhc2snLCB7CiAgICAgICAgICBpZDp0aGlzLnRhc2suaWQsCiAgICAgICAgICBkZXNjcmlwdGlvbjp0aGlzLmRlc2NyaXB0aW9uLAogICAgICAgICAgZGRhdGU6dGhpcy5kYXRlLmRhdGUKICAgICAgICB9KQogICAgICAgIHRoaXMuJHJvdXRlci5wdXNoKCcvbGlzdCcpCiAgICAgIH0sCiAgICAgIENvbXBsZXRlVGFzaygpewogICAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKCdjb21wbGV0ZVRhc2snLCB0aGlzLnRhc2suaWQpCiAgICAgICAgdGhpcy4kcm91dGVyLnB1c2goJy9saXN0JykKICAgICAgfQogICAgICAKICAgIH0sCiAgICBkZXN0cm95ZWQoKXsKICAgICAgaWYodGhpcy5jaGlwcyAmJiB0aGlzLmNoaXBzLmRlc3Ryb3llZCkgewogICAgICAgIHRoaXMuY2hpcHMuZGVzdHJveWVkKCkKICAgICAgfQogICAgICAKICAgICAgaWYodGhpcy5kYXRlICYmIHRoaXMuZGF0ZS5kZXN0cm95ZWQpewogICAgICAgIHRoaXMuZGF0ZS5kZXN0cm95ZWQoKQogICAgICB9CiAgICB9LAogICAgbW91bnRlZCgpewogICAgICB0aGlzLmRlc2NyaXB0aW9uID0gdGhpcy50YXNrLmRlc2NyaXB0aW9uCiAgICAgIHRoaXMuY2hpcHMgPSBNLkNoaXBzLmluaXQodGhpcy4kcmVmcy5jaGlwcywgewogICAgICAgIHBsYWNlaG9sZGVyOidUYXNrIHRhZ3MnLAogICAgICAgIGRhdGE6dGhpcy50YXNrLnRhZ3MKICAgICAgfSkKICAKICAgICAgdGhpcy5kYXRlID0gTS5EYXRlcGlja2VyLmluaXQodGhpcy4kcmVmcy5kYXRlcGlja2VyLCB7CiAgICAgICAgZm9ybWF0OidkZC5tbS55eXl5JywKICAgICAgICBkZWZhdWx0RGF0ZTpuZXcgRGF0ZSh0aGlzLnRhc2suZGF0ZSksCiAgICAgICAgc2V0RGVmYXVsdERhdGU6dHJ1ZQogICAgICB9KQogICAgICBzZXRUaW1lb3V0KCgpID0+IHsKICAgICAgICBNLnVwZGF0ZVRleHRGaWVsZHMoKQogICAgICB9LDApCiAgICB9Cn07Cg=="},{"version":3,"sources":["Task.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Task.vue","sourceRoot":"src/views","sourcesContent":["<template>\n<div class=\"row\">\n  <div class=\"col s6 offset-s3\">\n    <div v-if=\"task\" >\n      <h1>{{task.title}}</h1>\n    </div>\n    <div v-else>Task Not Found!</div>\n\n    <div>\n        <form @submit.prevent=\"submitHandler\">\n\n          <div class=\"chips\" ref=\"chips\"></div>\n\n          <div class=\"input-field\">\n            <textarea v-model=\"description\" id=\"description\" class=\"materialize-textarea\"></textarea>\n            <label for=\"description\">Textarea</label>\n            <span class=\"character-counter\" style=\"float: right; font-size: 12px;\">{{description.length}}/2048</span>\n          </div>\n\n          <input type=\"text\" ref=\"datepicker\">\n          \n          <div v-if=\"task.status !== 'completed'\">\n            <button class=\"btn\" type=\"submit\" style=\"margin-right:20px\">Update</button>\n            <button class=\"btn blue\" type=\"button\" @click=\"CompleteTask\"> Complete task</button>\n          </div>\n         \n        </form>\n    </div>\n  </div>\n</div>\n</template>\n\n<script>\nexport default {\n  name:'tasks',\n  computed:{\n    task(){\n      return this.$store.getters.taskById(+this.$route.params.id)\n    }\n  },\n  data:() => ({\n      description:'',\n      chips:null,\n      date:null\n    }),\n    methods:{\n      submitHandler(){\n        this.$store.dispatch('updateTask', {\n          id:this.task.id,\n          description:this.description,\n          ddate:this.date.date\n        })\n        this.$router.push('/list')\n      },\n      CompleteTask(){\n        this.$store.dispatch('completeTask', this.task.id)\n        this.$router.push('/list')\n      }\n      \n    },\n    destroyed(){\n      if(this.chips && this.chips.destroyed) {\n        this.chips.destroyed()\n      }\n      \n      if(this.date && this.date.destroyed){\n        this.date.destroyed()\n      }\n    },\n    mounted(){\n      this.description = this.task.description\n      this.chips = M.Chips.init(this.$refs.chips, {\n        placeholder:'Task tags',\n        data:this.task.tags\n      })\n  \n      this.date = M.Datepicker.init(this.$refs.datepicker, {\n        format:'dd.mm.yyyy',\n        defaultDate:new Date(this.task.date),\n        setDefaultDate:true\n      })\n      setTimeout(() => {\n        M.updateTextFields()\n      },0)\n    }\n};\n</script>\n\n<style>\n    \n</style>"]}]}